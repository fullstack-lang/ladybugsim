basePath: /api/github.com/fullstack-lang/ladybugsim/go/v1
consumes:
- application/json
definitions:
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  Ladybug:
    properties:
      Id:
        format: int64
        type: integer
      LadybugStatus:
        enum:
        - ON_THE_FENCE
        - ON_THE_GROUND
        type: string
      Name:
        type: string
      Position:
        format: double
        type: number
      Speed:
        format: double
        type: number
      TechName:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/ladybugsim/go/models
  NullFloat64:
    description: |-
      NullFloat64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Float64:
        format: double
        type: number
      Valid:
        type: boolean
    title: NullFloat64 represents a float64 that may be null.
    type: object
    x-go-package: database/sql
  NullInt64:
    description: |-
      NullInt64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Int64:
        format: int64
        type: integer
      Valid:
        type: boolean
    title: NullInt64 represents an int64 that may be null.
    type: object
    x-go-package: database/sql
  NullString:
    description: |-
      var s NullString
      err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
      ...
      if s.Valid {
      use s.String
      } else {
      NULL value
      }
    properties:
      String:
        type: string
      Valid:
        type: boolean
    title: |-
      NullString represents a string that may be null.
      NullString implements the Scanner interface so
      it can be used as a scan destination:
    type: object
    x-go-package: database/sql
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  ladybugAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Id:
        format: int64
        type: integer
      LadybugSimulation_LadybugsDBID:
        $ref: '#/definitions/NullInt64'
      LadybugSimulation_LadybugsDBID_Index:
        $ref: '#/definitions/NullInt64'
      LadybugStatus:
        enum:
        - ON_THE_FENCE
        - ON_THE_GROUND
        type: string
      Name:
        type: string
      Position:
        format: double
        type: number
      Speed:
        format: double
        type: number
      TechName:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: LadybugAPI is the input in POST API
    type: object
    x-go-name: LadybugAPI
    x-go-package: github.com/fullstack-lang/ladybugsim/go/orm
  ladybugDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Id_Data:
        $ref: '#/definitions/NullInt64'
      LadybugSimulation_LadybugsDBID:
        $ref: '#/definitions/NullInt64'
      LadybugSimulation_LadybugsDBID_Index:
        $ref: '#/definitions/NullInt64'
      LadybugStatus_Data:
        $ref: '#/definitions/NullString'
      Name_Data:
        $ref: '#/definitions/NullString'
      Position_Data:
        $ref: '#/definitions/NullFloat64'
      Speed_Data:
        $ref: '#/definitions/NullFloat64'
      TechName_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: LadybugDB describes a ladybug in the database
    type: object
    x-go-name: LadybugDB
    x-go-package: github.com/fullstack-lang/ladybugsim/go/orm
  ladybugsimulationAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      AbsoluteSpeed:
        format: double
        type: number
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      EventNb:
        format: int64
        type: integer
      ID:
        format: uint64
        type: integer
      LadybugRadius:
        format: double
        type: number
      Ladybugs:
        items:
          $ref: '#/definitions/Ladybug'
        type: array
      MaxDistanceInOneStep:
        format: double
        type: number
      Name:
        type: string
      NbLadybugs:
        format: int64
        type: integer
      NbOfCollision:
        format: int64
        type: integer
      SimulationStep:
        $ref: '#/definitions/Duration'
      UpdatedAt:
        format: date-time
        type: string
    title: LadybugSimulationAPI is the input in POST API
    type: object
    x-go-name: LadybugSimulationAPI
    x-go-package: github.com/fullstack-lang/ladybugsim/go/orm
  ladybugsimulationDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      AbsoluteSpeed_Data:
        $ref: '#/definitions/NullFloat64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      EventNb_Data:
        $ref: '#/definitions/NullInt64'
      ID:
        format: uint64
        type: integer
      LadybugRadius_Data:
        $ref: '#/definitions/NullFloat64'
      MaxDistanceInOneStep_Data:
        $ref: '#/definitions/NullFloat64'
      Name_Data:
        $ref: '#/definitions/NullString'
      NbLadybugs_Data:
        $ref: '#/definitions/NullInt64'
      NbOfCollision_Data:
        $ref: '#/definitions/NullInt64'
      SimulationStep_Data:
        $ref: '#/definitions/NullInt64'
      UpdatedAt:
        format: date-time
        type: string
    title: LadybugSimulationDB describes a ladybugsimulation in the database
    type: object
    x-go-name: LadybugSimulationDB
    x-go-package: github.com/fullstack-lang/ladybugsim/go/orm
host: localhost:8080
info:
  description: ladybugsim exposes types of a package.
  title: ladybugsim backend API
  version: "0.1"
paths:
  /commitnb:
    get:
      operationId: GetLastCommitNb
      tags:
      - backrepo
  /ladybugs:
    get:
      description: Get all ladybugs
      operationId: getLadybugs
      responses:
        "200":
          $ref: '#/responses/ladybugDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - ladybugs
    post:
      consumes:
      - application/json
      description: Creates a ladybug
      operationId: postLadybug
      parameters:
      - description: The Ladybug to submit or modify
        in: body
        name: Ladybug
        schema:
          $ref: '#/definitions/ladybugAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/ladybugDBResponse'
      tags:
      - ladybugs
  /ladybugs/{ID}:
    delete:
      description: Delete a ladybug
      operationId: deleteLadybug
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - ladybugs
    get:
      operationId: getLadybug
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/ladybugDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a ladybug.
      tags:
      - ladybugs
    patch:
      description: Update a ladybug
      operationId: updateLadybug
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Ladybug to submit or modify
        in: body
        name: Ladybug
        schema:
          $ref: '#/definitions/ladybugAPI'
      responses:
        "200":
          $ref: '#/responses/ladybugDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - ladybugs
  /ladybugsimulations:
    get:
      description: Get all ladybugsimulations
      operationId: getLadybugSimulations
      responses:
        "200":
          $ref: '#/responses/ladybugsimulationDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - ladybugsimulations
    post:
      consumes:
      - application/json
      description: Creates a ladybugsimulation
      operationId: postLadybugSimulation
      parameters:
      - description: The LadybugSimulation to submit or modify
        in: body
        name: LadybugSimulation
        schema:
          $ref: '#/definitions/ladybugsimulationAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/ladybugsimulationDBResponse'
      tags:
      - ladybugsimulations
  /ladybugsimulations/{ID}:
    delete:
      description: Delete a ladybugsimulation
      operationId: deleteLadybugSimulation
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - ladybugsimulations
    get:
      operationId: getLadybugSimulation
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/ladybugsimulationDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a ladybugsimulation.
      tags:
      - ladybugsimulations
    patch:
      description: Update a ladybugsimulation
      operationId: updateLadybugSimulation
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The LadybugSimulation to submit or modify
        in: body
        name: LadybugSimulation
        schema:
          $ref: '#/definitions/ladybugsimulationAPI'
      responses:
        "200":
          $ref: '#/responses/ladybugsimulationDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - ladybugsimulations
  /pushfromfrontnb:
    get:
      operationId: GetLastPushFromFrontNb
      tags:
      - backrepo
produces:
- application/json
responses:
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  ladybugDBResponse:
    description: LadybugDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Id_Data:
        description: Declation for basic field ladybugDB.Id {{BasicKind}} (to be completed)
      LadybugSimulation_LadybugsDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field LadybugSimulation{}.Ladybugs []*Ladybug
      LadybugSimulation_LadybugsDBID_Index:
        description: implementation of the index of the withing the slice
      LadybugStatus_Data:
        description: Declation for basic field ladybugDB.LadybugStatus {{BasicKind}}
          (to be completed)
      Name_Data:
        description: Declation for basic field ladybugDB.Name {{BasicKind}} (to be
          completed)
      Position_Data:
        description: Declation for basic field ladybugDB.Position {{BasicKind}} (to
          be completed)
      Speed_Data:
        description: Declation for basic field ladybugDB.Speed {{BasicKind}} (to be
          completed)
      TechName_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field ladybugDB.TechName {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  ladybugDBsResponse:
    description: LadybugDBs arrays ladybugDBs
    schema:
      items:
        $ref: '#/definitions/ladybugDB'
      type: array
  ladybugsimulationDBResponse:
    description: LadybugSimulationDBResponse provides response
    headers:
      AbsoluteSpeed_Data:
        description: Declation for basic field ladybugsimulationDB.AbsoluteSpeed {{BasicKind}}
          (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      EventNb_Data:
        description: Declation for basic field ladybugsimulationDB.EventNb {{BasicKind}}
          (to be completed)
      ID:
        format: uint64
        type: integer
      LadybugRadius_Data:
        description: Declation for basic field ladybugsimulationDB.LadybugRadius {{BasicKind}}
          (to be completed)
      MaxDistanceInOneStep_Data:
        description: Declation for basic field ladybugsimulationDB.MaxDistanceInOneStep
          {{BasicKind}} (to be completed)
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field ladybugsimulationDB.Name {{BasicKind}} (to be completed)
      NbLadybugs_Data:
        description: Declation for basic field ladybugsimulationDB.NbLadybugs {{BasicKind}}
          (to be completed)
      NbOfCollision_Data:
        description: Declation for basic field ladybugsimulationDB.NbOfCollision {{BasicKind}}
          (to be completed)
      SimulationStep_Data:
        description: Declation for basic field ladybugsimulationDB.SimulationStep
          {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  ladybugsimulationDBsResponse:
    description: LadybugSimulationDBs arrays ladybugsimulationDBs
    schema:
      items:
        $ref: '#/definitions/ladybugsimulationDB'
      type: array
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
